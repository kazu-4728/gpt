name: agent
on:
  issues:
    types: [opened, edited, labeled]
  workflow_dispatch: {}          # ← 手動起動を追加（ActionsからRunできる）

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  intake:
    if: |
      (github.event_name == 'workflow_dispatch') ||
      (github.event_name == 'issues' && (
        (github.event.action == 'labeled' && github.event.label.name == 'agent') ||
        contains(github.event.issue.body, '目的:') || contains(github.event.issue.body, '目的：')
      ))
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract purpose
        id: parse
        shell: bash
        run: |
          BODY_RAW="${{ github.event.issue.body }}"
          BODY="$(printf "%s" "$BODY_RAW" | sed 's/\r//g')"
          PURPOSE="$(printf "%s\n" "$BODY" \
            | grep -m1 -E '^[[:space:]]*目的[:：][[:space:]]*' \
            | sed -E 's/^[[:space:]]*目的[:：][[:space:]]*//')"
          [ -n "$PURPOSE" ] || PURPOSE="未記入"
          # ブランチ用に安全なスラッグ化（英数とハイフンのみ、先頭末尾をトリム）
          SLUG="$(printf "%s" "$PURPOSE" | tr '[:upper:] ' '[:lower:]-' | tr -cd 'a-z0-9-')"
          SLUG="${SLUG:-purpose}"
          SLUG="${SLUG%%-}"; SLUG="${SLUG##-}"
          echo "purpose=$PURPOSE" >> $GITHUB_OUTPUT
          echo "branch=agent/$(date +%Y%m%d-%H%M)-$SLUG" >> $GITHUB_OUTPUT

      - name: Debug context
        run: |
          echo "PURPOSE=${{ steps.parse.outputs.purpose }}"
          echo "BRANCH=${{ steps.parse.outputs.branch }}"
          echo "GIT_STATUS_BEFORE:"
          git status --porcelain

      - name: Scaffold files
        run: |
          cat > TASTE.md <<'EOF'
# TASTE（判断基準）
- T1: 極端な単純さ（0–3）
- T2: 1分完了（0–3）
- T3: 迷いゼロ（0–3）
- T4: 言い訳禁止（0–3）
- T5: 待ち時間ゼロ（0–3）
- T6: 物語性（0–3）
## ルール
- 合計 < 13 → 自動却下
- 合計 ≥ 13 → PRFAQへ
EOF

          cat > PRFAQ_1pager.md <<'EOF'
# プレスリリース（1行PR）
（140字PR）
## ストーリー（30秒ピッチ）
（ユーザーの一日がどう変わるか）
## FAQ（6）
Q1 なぜ今？ / Q2 既存との差 / Q3 1分で終わる理由
Q4 何を削った？ / Q5 失敗時は？ / Q6 成功の測り方
## TASTEスコア
T1__ / T2__ / T3__ / T4__ / T5__ / T6__  （合計 __ / 18）
EOF

          cat > DECISION_MEMO.md <<'EOF'
# 決裁メモ（1枚）
- 推奨: {A/B/C→1つ}  理由: {一行}
- 代替: {次点}  捨てた理由: {一行}
- 失敗プリモーテム: {最悪の未来像 一行}
- Kill条件: {撤退トリガ例: NPS<0 / 7日継続<15%}
- 爆風半径: {顧客/運用/法務}
- 次のデモ日: {日付}
EOF

          cat > next_actions_v1.md <<EOF
# next_actions_v1.md
## 結論
「${{ steps.parse.outputs.purpose }}」を自動スキャフォールドし、Draft PRで合議→D-12で決裁。
## 手順（このPRでやること）
1) PRFAQを埋める / TASTE≥13 なら進行
2) Goなら次の実装ブロックを起票
EOF
          echo "GIT_STATUS_AFTER:"
          git status --porcelain

      - name: Create Draft PR
        id: cpr
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: "agent: scaffold for ${{ steps.parse.outputs.purpose }}"
          branch: ${{ steps.parse.outputs.branch }}
          title: "agent: ${{ steps.parse.outputs.purpose }}"
          body: |
            目的: **${{ steps.parse.outputs.purpose }}**
            生成: TASTE.md / PRFAQ_1pager.md / DECISION_MEMO.md / next_actions_v1.md
            流れ: TASTE採点→PRFAQ→D-12（12分決裁）
          draft: true
          add-paths: |          # ← “変更なし”でも検出させるため明示
            TASTE.md
            PRFAQ_1pager.md
            DECISION_MEMO.md
            next_actions_v1.md
